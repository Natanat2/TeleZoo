import asyncio
from aiogram import Bot, Dispatcher
from aiogram.types import Message, CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton, FSInputFile
from aiogram.filters import Command

# –¢–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞
TOKEN = '7408912366:AAGb0eztKX1Ez-BWZ-cm751SclPgKZpn6Go'

# –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä—ã –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token = TOKEN)
dp = Dispatcher()

# –í–æ–ø—Ä–æ—Å—ã –¥–ª—è –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã
quiz_data = [
    {
        "question": "–ì–¥–µ –≤—ã —Ö–æ—Ç–µ–ª–∏ –±—ã –∂–∏—Ç—å?",
        "options": ["–í –≥—É—Å—Ç–æ–º –ª–µ—Å—É", "–ù–∞ –∂–∞—Ä–∫–æ–º –ø–æ–±–µ—Ä–µ–∂—å–µ", "–í –∑–∞—Å–Ω–µ–∂–µ–Ω–Ω—ã—Ö –≥–æ—Ä–∞—Ö", "–í –≥–æ—Ä–æ–¥—Å–∫–æ–π —Å—É–µ—Ç–µ"],
        "mapping": {
            "–í –≥—É—Å—Ç–æ–º –ª–µ—Å—É": "–õ–µ–≤",
            "–ù–∞ –∂–∞—Ä–∫–æ–º –ø–æ–±–µ—Ä–µ–∂—å–µ": "–§–ª–∞–º–∏–Ω–≥–æ",
            "–í –∑–∞—Å–Ω–µ–∂–µ–Ω–Ω—ã—Ö –≥–æ—Ä–∞—Ö": "–ë–µ–ª—ã–π –º–µ–¥–≤–µ–¥—å",
            "–í –≥–æ—Ä–æ–¥—Å–∫–æ–π —Å—É–µ—Ç–µ": "–ö—Ä—ã—Å–∞"
        }
    },
    {
        "question": "–ö–∞–∫—É—é –µ–¥—É –≤—ã –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—Ç–µ?",
        "options": ["–ú—è—Å–æ", "–û–≤–æ—â–∏", "–†—ã–±–∞", "–°–ª–∞–¥–æ—Å—Ç–∏"],
        "mapping": {
            "–ú—è—Å–æ": "–õ–µ–≤",
            "–û–≤–æ—â–∏": "–†—ã—Å—å",
            "–†—ã–±–∞": "–§–ª–∞–º–∏–Ω–≥–æ",
            "–°–ª–∞–¥–æ—Å—Ç–∏": "–ö—Ä—ã—Å–∞"
        }
    },
    {
        "question": "–ö–∞–∫–æ–π –≤–∞—à –ª—é–±–∏–º—ã–π —Ü–≤–µ—Ç?",
        "options": ["–ö—Ä–∞—Å–Ω—ã–π", "–°–∏–Ω–∏–π", "–ó–µ–ª–µ–Ω—ã–π", "–ñ–µ–ª—Ç—ã–π"],
        "mapping": {
            "–ö—Ä–∞—Å–Ω—ã–π": "–õ–µ–≤",
            "–°–∏–Ω–∏–π": "–ë–µ–ª—ã–π –º–µ–¥–≤–µ–¥—å",
            "–ó–µ–ª–µ–Ω—ã–π": "–õ–µ–≤",
            "–ñ–µ–ª—Ç—ã–π": "–§–ª–∞–º–∏–Ω–≥–æ"
        }
    },
    {
        "question": "–ö–∞–∫–æ–π –≤–∞—à –ª—é–±–∏–º—ã–π —Å—Ç–∏–ª—å –∂–∏–∑–Ω–∏?",
        "options": ["–ê–∫—Ç–∏–≤–Ω—ã–π", "–°–ø–æ–∫–æ–π–Ω—ã–π", "–ü—Ä–∏—Ä–æ–¥–Ω—ã–π", "–ì–æ—Ä–æ–¥—Å–∫–æ–π"],
        "mapping": {
            "–ê–∫—Ç–∏–≤–Ω—ã–π": "–õ–µ–≤",
            "–°–ø–æ–∫–æ–π–Ω—ã–π": "–†—ã—Å—å",
            "–ü—Ä–∏—Ä–æ–¥–Ω—ã–π": "–§–ª–∞–º–∏–Ω–≥–æ",
            "–ì–æ—Ä–æ–¥—Å–∫–æ–π": "–ö—Ä—ã—Å–∞"
        }
    },
    {
        "question": "–ö–∞–∫ –≤—ã –æ—Ç–Ω–æ—Å–∏—Ç–µ—Å—å –∫ –æ–¥–∏–Ω–æ—á–µ—Å—Ç–≤—É?",
        "options": ["–õ—é–±–ª—é –æ–¥–∏–Ω–æ—á–µ—Å—Ç–≤–æ", "–ù–µ –º–æ–≥—É –±–µ–∑ –∫–æ–º–ø–∞–Ω–∏–∏", "–ú–Ω–µ –≤—Å–µ —Ä–∞–≤–Ω–æ", "–ó–∞–≤–∏—Å–∏—Ç –æ—Ç —Å–∏—Ç—É–∞—Ü–∏–∏"],
        "mapping": {
            "–õ—é–±–ª—é –æ–¥–∏–Ω–æ—á–µ—Å—Ç–≤–æ": "–ë–µ–ª—ã–π –º–µ–¥–≤–µ–¥—å",
            "–ù–µ –º–æ–≥—É –±–µ–∑ –∫–æ–º–ø–∞–Ω–∏–∏": "–ö—Ä—ã—Å–∞",
            "–ú–Ω–µ –≤—Å–µ —Ä–∞–≤–Ω–æ": "–õ–µ–≤",
            "–ó–∞–≤–∏—Å–∏—Ç –æ—Ç —Å–∏—Ç—É–∞—Ü–∏–∏": "–§–ª–∞–º–∏–Ω–≥–æ"
        }
    },
]

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_states = {}

logo = FSInputFile('media/logo.jpg')


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@dp.message(Command('start'))
async def start_command(message: Message):
    keyboard = InlineKeyboardMarkup(inline_keyboard = [
        [InlineKeyboardButton(text = "–ù–∞—á–∞—Ç—å –≤–∏–∫—Ç–æ—Ä–∏–Ω—É üß†", callback_data = "start_quiz")],
        [InlineKeyboardButton(text = "–û –∑–æ–æ–ø–∞—Ä–∫–µ üêæ", callback_data = "about_zoo")],
    ])

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ª–æ–≥–æ—Ç–∏–ø
    await bot.send_photo(
        chat_id = message.chat.id,
        photo = logo,
        caption = "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ú–æ—Å–∫–æ–≤—Å–∫–∏–π –∑–æ–æ–ø–∞—Ä–∫! –≠—Ç–æ —Ç–µ–ª–µ–≥—Ä–∞–º –ú–æ—Å–∫–æ–≤—Å–∫–æ–≥–æ –ó–æ–æ–ø–∞—Ä–∫–∞. üêæ –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup = keyboard
    )


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–û –∑–æ–æ–ø–∞—Ä–∫–µ"
@dp.callback_query(lambda c: c.data == "about_zoo")
async def about_zoo(callback: CallbackQuery):
    text = (
        "–ú–æ—Å–∫–æ–≤—Å–∫–∏–π –∑–æ–æ–ø–∞—Ä–∫ ‚Äî –æ–¥–∏–Ω –∏–∑ —Å—Ç–∞—Ä–µ–π—à–∏—Ö –∑–æ–æ–ø–∞—Ä–∫–æ–≤ –ï–≤—Ä–æ–ø—ã. –û–Ω –±—ã–ª –æ—Ç–∫—Ä—ã—Ç 31 —è–Ω–≤–∞—Ä—è 1864 –≥–æ–¥–∞ –ø–æ —Å—Ç–∞—Ä–æ–º—É —Å—Ç–∏–ª—é –∏ –Ω–∞–∑—ã–≤–∞–ª—Å—è —Ç–æ–≥–¥–∞ –∑–æ–æ—Å–∞–¥–æ–º.\n\n"
        "–ú–æ—Å–∫–æ–≤—Å–∫–∏–π –∑–æ–æ–ø–∞—Ä–∫ –±—ã–ª –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞–Ω –ò–º–ø–µ—Ä–∞—Ç–æ—Ä—Å–∫–∏–º —Ä—É—Å—Å–∫–∏–º –æ–±—â–µ—Å—Ç–≤–æ–º –∞–∫–∫–ª–∏–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –∂–∏–≤–æ—Ç–Ω—ã—Ö –∏ —Ä–∞—Å—Ç–µ–Ω–∏–π.\n\n"
        "–ù–∞—á–∞–ª–æ –µ–≥–æ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Å–≤—è–∑–∞–Ω–æ —Å –∑–∞–º–µ—á–∞—Ç–µ–ª—å–Ω—ã–º–∏ –∏–º–µ–Ω–∞–º–∏ –ø—Ä–æ—Ñ–µ—Å—Å–æ—Ä–æ–≤ –ú–æ—Å–∫–æ–≤—Å–∫–æ–≥–æ –£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞ –ö–∞—Ä–ª–∞ –§—Ä–∞–Ω—Ü–µ–≤–∏—á–∞ –†—É–ª—å–µ, –ê–Ω–∞—Ç–æ–ª–∏—è –ü–µ—Ç—Ä–æ–≤–∏—á–∞ –ë–æ–≥–¥–∞–Ω–æ–≤–∞ –∏ –°–µ—Ä–≥–µ—è –ê–ª–µ–∫—Å–µ–µ–≤–∏—á–∞ –£—Å–æ–≤–∞.\n\n"
        "–ú–µ—Å—Ç–Ω–æ—Å—Ç—å, –≥–¥–µ —Ç–µ–ø–µ—Ä—å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –°—Ç–∞—Ä–∞—è —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏—è –∑–æ–æ–ø–∞—Ä–∫–∞, –Ω–∞–∑—ã–≤–∞–ª–∞—Å—å ¬´–ü—Ä–µ—Å–Ω–µ–Ω—Å–∫–∏–µ –ø—Ä—É–¥—ã¬ª. –ó–¥–µ—Å—å –ø—Ä–æ—Ç–µ–∫–∞–ª–∞ –¥–æ–≤–æ–ª—å–Ω–æ —à–∏—Ä–æ–∫–∞—è —Ä–µ–∫–∞ –ü—Ä–µ—Å–Ω—è, –∏ –±—ã–ª–æ –æ–¥–Ω–æ –∏–∑ –ª—é–±–∏–º—ã—Ö –º–µ—Å—Ç –≥—É–ª—è–Ω–∏–π –º–æ—Å–∫–≤–∏—á–µ–π ‚Äî –∑–µ–ª—ë–Ω—ã–µ —Ö–æ–ª–º—ã, –∑–∞–ª–∏–≤–Ω—ã–µ –ª—É–≥–∞, —Ü–≤–µ—Ç—É—â–∏–µ —Å–∞–¥—ã —É–∫—Ä–∞—à–∞–ª–∏ –æ–∫—Ä–µ—Å—Ç–Ω–æ—Å—Ç–∏.\n\n"
        "–î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–æ–æ—Å–∞–¥–∞ –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ–º –≥–æ–ª–æ—Å–æ–≤ —á–ª–µ–Ω–æ–≤ –û–±—â–µ—Å—Ç–≤–∞ –∞–∫–∫–ª–∏–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –±—ã–ª –≤—ã–±—Ä–∞–Ω –∏–º–µ–Ω–Ω–æ —ç—Ç–æ—Ç —É—á–∞—Å—Ç–æ–∫, —Ç–∞–∫ –∫–∞–∫ –æ–Ω –Ω–∞—Ö–æ–¥–∏–ª—Å—è –Ω–∞ –¥–æ—Å—Ç—É–ø–Ω–æ–º —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–∏ –¥–ª—è –≤—Å–µ—Ö –º–æ—Å–∫–≤–∏—á–µ–π, –≤ —Ç–æ–º —á–∏—Å–ª–µ –∏ –Ω–µ–±–æ–≥–∞—Ç—ã—Ö. –¢–µ—Ä—Ä–∏—Ç–æ—Ä–∏—è –ü–µ—Ç—Ä–æ–≤—Å–∫–æ–π –∞–∫–∞–¥–µ–º–∏–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä, –±—ã–ª–∞ —É–¥–æ–±–Ω–µ–µ –∏ –±–æ–ª—å—à–µ, –Ω–æ –µ–∑–¥–∏—Ç—å —Ç—É–¥–∞ –±—ã–ª–æ –±—ã –¥–∞–ª–µ–∫–æ –∏ –¥–æ—Ä–æ–≥–æ –¥–ª—è –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–∞ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö –ø–æ—Å–µ—Ç–∏—Ç–µ–ª–µ–π.\n\n"
        "–ü–æ–¥—Ä–æ–±–Ω–µ–µ: [–ú–æ—Å–∫–æ–≤—Å–∫–∏–π –∑–æ–æ–ø–∞—Ä–∫](https://moscowzoo.ru/about)"
    )
    await callback.message.answer(text, disable_web_page_preview = True)
    await callback.answer()


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ù–∞—á–∞—Ç—å –≤–∏–∫—Ç–æ—Ä–∏–Ω—É"
@dp.callback_query(lambda c: c.data == "start_quiz")
async def start_quiz(callback: CallbackQuery):
    user_states[callback.from_user.id] = {"current_question": 0, "answers": []}
    await send_question(callback.from_user.id)


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–ª–µ–¥—É—é—â–µ–≥–æ –≤–æ–ø—Ä–æ—Å–∞
async def send_question(user_id):
    state = user_states[user_id]
    question_data = quiz_data[state["current_question"]]
    keyboard = InlineKeyboardMarkup(
        inline_keyboard = [
            [InlineKeyboardButton(text = option, callback_data = f"quiz_option:{option}")]
            for option in question_data["options"]
        ]
    )
    await bot.send_message(
        chat_id = user_id,
        text = f"–í–æ–ø—Ä–æ—Å {state['current_question'] + 1}: {question_data['question']}",
        reply_markup = keyboard
    )


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å
@dp.callback_query(lambda c: c.data.startswith("quiz_option:"))
async def handle_quiz_answer(callback: CallbackQuery):
    user_id = callback.from_user.id
    state = user_states[user_id]
    question_data = quiz_data[state["current_question"]]
    selected_option = callback.data.split(":")[1]

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–≤–µ—Ç
    state["answers"].append(selected_option)

    # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –≤–æ–ø—Ä–æ—Å—É –∏–ª–∏ –∑–∞–≤–µ—Ä—à–∞–µ–º –≤–∏–∫—Ç–æ—Ä–∏–Ω—É
    state["current_question"] += 1
    if state["current_question"] < len(quiz_data):
        await send_question(user_id)
    else:
        # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –æ—Ç–≤–µ—Ç—ã –∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–æ—Ç–µ–º–Ω–æ–µ –∂–∏–≤–æ—Ç–Ω–æ–µ
        animal_scores = {}
        for i, answer in enumerate(state["answers"]):
            mapping = quiz_data[i]["mapping"]
            animal = mapping[answer]
            animal_scores[animal] = animal_scores.get(animal, 0) + 1

        total_animal = max(animal_scores, key = animal_scores.get)

        animal_images = {
            "–õ–µ–≤": "media/lion.png",
            "–§–ª–∞–º–∏–Ω–≥–æ": "media/flamingo.png",
            "–ë–µ–ª—ã–π –º–µ–¥–≤–µ–¥—å": "media/bear.png",
            "–†—ã—Å—å": "media/Ris.png",
            "–ö—Ä—ã—Å–∞": "media/rat.png",
        }

        await bot.send_photo(
            chat_id = user_id,
            photo = FSInputFile(animal_images[total_animal]),
            caption = f"–ü–æ–∑–¥—Ä–∞–≤–ª—è—é! {total_animal} ‚Äî –≤–∞—à–µ —Ç–æ—Ç–µ–º–Ω–æ–µ –∂–∏–≤–æ—Ç–Ω–æ–µ!"
        )

        # –£–¥–∞–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã
        del user_states[user_id]

    await callback.answer()


# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
async def main():
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    await dp.start_polling(bot)


if __name__ == '__main__':
    asyncio.run(main())
